version: "3"

services:
  itop-client:
    image: vbkunin/itop
    container_name: itop-central
    restart: always
    ports:
      - "9898:80"
    environment:
      - DB_HOST=itop-db-central
      - DB_NAME=itop
      - DB_USER=itop
      - DB_PASSWORD=itop
      
  itop-db-central:
    image: mariadb:10
    container_name: itop-db-central
    restart: always
    environment:
      - MYSQL_DATABASE=itop
      - MYSQL_USER=itop
      - MYSQL_PASSWORD=itop
      - MYSQL_ROOT_PASSWORD=root
    volumes:
      - ./itop-db-data/mariadb:/var/lib/mysql

  portainer-central:
    image: portainer/portainer-ce
    container_name: portainer-central
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
    ports:
      - "9000:9000"


  zabbix-db-central:
    image: postgres:14
    container_name: zabbix-db-central
    restart: always
    environment:
      POSTGRES_PASSWORD: zabbix
      POSTGRES_DB: zabbix
      TZ: Europe/Paris
    volumes:
      - ./zabbix-db-central:/var/lib/postgresql/data

  zabbix-agent-central:
    image: zabbix/zabbix-server-pgsql:latest
    container_name: zabbix_active_agent
    depends_on:
      - zabbix-db-central
    ports:
      - 10051:10051 
      - 10050:10050
    environment:
      DB_SERVER_HOST: zabbix-db-central
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: zabbix
      POSTGRES_DB: zabbix
      ZBX_DATABASE_SCHEMA: zabbix
    volumes:
      - ./zabbix-agent-central:/var/lib/zabbix
    restart: always

  zabbix-web-central:
    image: zabbix/zabbix-web-nginx-pgsql:latest
    container_name: zabbix-web-central
    depends_on:
      - zabbix-db-central
      - zabbix-agent-central
    ports:
      - 8095:8080
    environment:
      DB_SERVER_HOST: zabbix-db-central
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: zabbix
      POSTGRES_DB: zabbix
      ZBX_SERVER_HOST: zabbix
    restart: always

#  prometheus:
#    image: prom/prometheus
#    ports:
#      - 9091:9090
#    volumes:
#      - ./prometheus/:/etc/prometheus/
#      - prometheus_data:/prometheus
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yml'
#
#  grafana:
#    image: grafana/grafana-enterprise
#    ports:
#      - 3000:3000
#    restart: unless-stopped
#    command: 
#      - 'sudo mkdir /var/lib/grafana/plugins'
#    volumes:
#      - ./grafana:/var/lib/grafana


  odoo-central:
    container_name: odoo-central
    image: odoo:14
    depends_on:
      - odoo-db-central
    ports:
      - "8069:8069"
    environment:
      - HOST=odoo-db-central
      - USER=odoo
      - PASSWORD=odoo
      - DB_NAME=postgres
      - PGUSER=odoo
      - PGPASSWORD=odoo
      - PGHOST=odoo-db-central
    volumes:
      - odoo_data:/var/lib/odoo
      - odoo_addons:/mnt/extra-addons

  odoo-db-central:
    container_name: odoo-db-central
    image: postgres:12
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=postgres
    volumes:
      - ./odoo-db_data:/var/lib/postgresql/data


  passbolt-db-central:
    container_name: passbolt-db-central 
    image: mariadb:10.10
    restart: unless-stopped
    environment:
      MYSQL_RANDOM_ROOT_PASSWORD: passbolt
      MYSQL_DATABASE: passbolt
      MYSQL_USER: passbolt
      MYSQL_PASSWORD: passbolt
    volumes:
      - ./passbolt:/var/lib/mysql

  passbolt:
    container_name: passbolt-central
    image: passbolt/passbolt:latest-ce
    #Alternatively you can use rootless:
    #image: passbolt/passbolt:latest-ce-non-root
    restart: unless-stopped
    depends_on:
      - passbolt-db-central
    environment:
      APP_FULL_BASE_URL: http://127.0.0.1:10480
      DATASOURCES_DEFAULT_HOST: passbolt-db-central
      DATASOURCES_DEFAULT_USERNAME: passbolt
      DATASOURCES_DEFAULT_PASSWORD: passbolt
      DATASOURCES_DEFAULT_DATABASE: passbolt
    volumes:
      - ./passbolt-gpg:/etc/passbolt/gpg
      - ./passbolt-jwt:/etc/passbolt/jwt
    command: ["/usr/bin/wait-for.sh", "-t", "0", "db:3306", "--", "/docker-entrypoint.sh"]
    ports:
      - 10480:80
      - 10443:443

  heimdall-central:
    image: linuxserver/heimdall
    container_name: heimdall-central
    restart: always
    volumes:
      - ./heimdall_config:/config
    ports:
      - "9090:80"

volumes:
  odoo_addons:
  odoo_data:
